/**
 * Configuration generators for complementary tools
 */

import type { GeneratedConfig } from '../types/simplified.js';

/**
 * Generate Prettier configuration for non-JS/TS files
 */
export function generatePrettierConfig(): GeneratedConfig {
  return {
    path: '.prettierrc.json',
    content: JSON.stringify(
      {
        overrides: [
          {
            files: ['*.js', '*.jsx', '*.ts', '*.tsx', '*.mjs', '*.cjs', '*.cts', '*.mts'],
            options: {
              requirePragma: true, // Effectively disables Prettier for JS/TS files
            },
          },
        ],
      },
      null,
      2,
    ),
  };
}

/**
 * Generate Prettier ignore file
 */
export function generatePrettierIgnore(): GeneratedConfig {
  return {
    path: '.prettierignore',
    content: `# Generated by @outfitter/formatting

# Dependencies
node_modules/
.pnp
.pnp.js

# Build outputs
dist/
build/
out/
.next/
.nuxt/
.vuepress/dist/
.docusaurus/
.cache/

# Testing
coverage/
.nyc_output/

# Misc
.DS_Store
*.log
.env*
!.env.example

# IDE
.idea/
.vscode/*
!.vscode/settings.json
!.vscode/extensions.json

# Temporary files
*.tmp
*.temp
`,
  };
}

/**
 * Generate markdownlint-cli2 configuration
 */
export function generateMarkdownlintConfig(): GeneratedConfig {
  return {
    path: '.markdownlint-cli2.yaml',
    content: `# Generated by @outfitter/formatting

# Extends the default rules
default: true

# Override specific rules
MD003:
  style: atx # Heading style
MD004:
  style: dash # Unordered list style  
MD007:
  indent: 2 # Unordered list indentation
MD013: false # Line length (let Prettier handle wrapping)
MD024:
  siblings_only: true # Multiple headers with same content
MD029:
  style: ordered # Ordered list item prefix
MD032: true # Blank lines around lists
MD033: false # Allow inline HTML
MD034: true # No bare URLs
MD040: true # Fenced code blocks should have language
MD041: false # First line doesn't need to be a heading
MD046:
  style: fenced # Code block style

# Globs to ignore
ignores:
  - node_modules/**
  - .git/**
  - dist/**
  - build/**
  - coverage/**
  - CHANGELOG.md
  - "*.min.md"
`,
  };
}

/**
 * Generate EditorConfig
 */
export function generateEditorConfig(): GeneratedConfig {
  return {
    path: '.editorconfig',
    content: `# Generated by @outfitter/formatting
# https://editorconfig.org

root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 2

# Markdown files
[*.{md,mdx}]
trim_trailing_whitespace = false

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Makefiles
[Makefile]
indent_style = tab

# Windows scripts
[*.{cmd,bat}]
end_of_line = crlf
`,
  };
}

/**
 * Generate Git attributes
 */
export function generateGitAttributes(): GeneratedConfig {
  return {
    path: '.gitattributes',
    content: `# Generated by @outfitter/formatting

# Auto detect text files and perform LF normalization
* text=auto eol=lf

# Windows scripts should use CRLF
*.{cmd,[cC][mM][dD]} text eol=crlf
*.{bat,[bB][aA][tT]} text eol=crlf
*.ps1 text eol=crlf

# Binary files
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.ico binary
*.pdf binary
*.woff binary
*.woff2 binary
`,
  };
}

/**
 * Generate additional VS Code settings for non-JS/TS files
 */
export function generateAdditionalVSCodeSettings(): GeneratedConfig {
  return {
    path: '.vscode/settings.json',
    content: JSON.stringify(
      {
        // Prettier for non-JS/TS files
        '[json]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
        },
        '[jsonc]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
        },
        '[yaml]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
        },
        '[markdown]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
          'files.trimTrailingWhitespace': false,
        },
        '[css]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
        },
        '[html]': {
          'editor.defaultFormatter': 'esbenp.prettier-vscode',
        },

        // Editor settings
        'files.eol': '\\n',
        'files.insertFinalNewline': true,
        'files.trimTrailingWhitespace': true,
      },
      null,
      2,
    ),
    merge: true,
  };
}

/**
 * Generate VS Code extensions recommendations
 */
export function generateVSCodeExtensions(): GeneratedConfig {
  return {
    path: '.vscode/extensions.json',
    content: JSON.stringify(
      {
        recommendations: [
          'biomejs.biome',
          'esbenp.prettier-vscode',
          'davidanson.vscode-markdownlint',
          'editorconfig.editorconfig',
        ],
      },
      null,
      2,
    ),
  };
}